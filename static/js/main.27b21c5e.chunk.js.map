{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","message","avatar","src","alt","textMessage","inTextMessage","name","text","time","messageData","backgroundColor","HW1","Affair","styleClass","affair","priority","button","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","mappedButtons","setFilter","bt","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","users","addUserCallback","setName","error","setError","totalUsers","length","inputClassError","s","hw3","value","placeholder","onChange","e","currentTarget","trim","inputName","buttonAdd","alert","textError","GreetingContainer","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","console","log","HW4","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.27b21c5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3Jc5l\",\"avatar\":\"Message_avatar__1LDJI\",\"name\":\"Message_name__2480J\",\"text\":\"Message_text__2-mpW\",\"textMessage\":\"Message_textMessage__1dxK0\",\"inTextMessage\":\"Message_inTextMessage__1Yq_5\",\"time\":\"Message_time__3MTiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw3\":\"Greeting_hw3__2U-ea\",\"buttonAdd\":\"Greeting_buttonAdd__3zD8g\",\"error\":\"Greeting_error__1bRdz\",\"inputName\":\"Greeting_inputName__1c8Jh\",\"totalUsers\":\"Greeting_totalUsers__2GbHK\",\"textError\":\"Greeting_textError__1UoTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__1LqH6\",\"name\":\"Affair_name__ANoSi\",\"priority\":\"Affair_priority__2m6HF\",\"button\":\"Affair_button__3ATzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Jkct\",\"errorInput\":\"SuperInputText_errorInput__voX8f\",\"error\":\"SuperInputText_error__2rvHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1s3Gc\",\"column\":\"HW4_column__Fu3Zn\",\"testSpanError\":\"HW4_testSpanError__2sVnq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1dYS6\",\"red\":\"SuperButton_red__2S3Ws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1DnsW\",\"spanClassName\":\"SuperCheckbox_spanClassName__PCIAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__DG1JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__1Ck6e\"};","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\n\r\ntype propsMessage={\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\n\r\nfunction Message(props:propsMessage) {\r\n    return (\r\n        <div className={style.message}>\r\n<div className={style.avatar}>\r\n    <img src={props.avatar} alt={'Logo'}/>\r\n</div>\r\n            <div className={style.textMessage}>\r\n                <div className={style.inTextMessage}>\r\n                    <div className={style.name}>{props.name}</div>\r\n                    <div className={style.text}>{props.message}</div>\r\n                </div>\r\n                <div className={style.time}>{props.time}</div></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\nconst style={\r\n    backgroundColor: \"#49b61c\"\r\n}\r\nfunction HW1() {\r\n    return (\r\n        <div style={style}>\r\n            <hr/>\r\n            <h2>HomeTask1</h2>\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport styleClass from './Affair.module.css'\r\n\r\nexport type AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number)=> void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n    return (\r\n        <div className={styleClass.affair} key={props.affair._id}>\r\n         <div  className={styleClass.name}>{props.affair.name}</div>\r\n            <div className={styleClass.priority}>{props.affair.priority}</div>\r\n            <button className={styleClass.button} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport styleClass from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((a) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n    const buttonsName = [{name: \"All\", onClick:()=>props.setFilter('all')},\r\n        {name: \"High\", onClick:()=>props.setFilter('high')},\r\n        {name: \"Middle\",onClick:()=>props.setFilter('middle') },\r\n        {name: \"Low\", onClick:()=>props.setFilter('low')},]\r\n\r\n    const mappedButtons = buttonsName.map((bt)=>(\r\n        <button className={styleClass.button} onClick={bt.onClick}>{bt.name}</button>\r\n    ))\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            {mappedButtons}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\nexport type AffairPriorityType = 'high'|'low'|'middle'\r\nexport type AffairType ={\r\n    _id:number\r\n    name:string\r\n    priority:AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') return affairs\r\n    return affairs.filter(f=>f.priority===filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {return affairs.filter(f=>f._id!==_id)}\r\nconst style={\r\n    backgroundColor: \"#143891\"\r\n}\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n    return (\r\n        <div style={style}>\r\n            <hr/>\r\n            <h2>HomeTask2</h2>\r\n            <Affairs data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}/>\r\n        </div>\r\n    )\r\n}\r\nexport default HW2\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingPropsType = {\r\n  users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {users,addUserCallback}\r\n) => {\r\n\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string | null>(null)\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.value.trim() && error) {\r\n            setError('')\r\n        }\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n        if (!name.trim()) {\r\n            setError('Name is empty!!!')\r\n            return\r\n        }\r\n        addUserCallback(name)\r\n        alert(`Hello ${name}!`)\r\n        setName('')\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    const inputClassError = error ? s.error : ''\r\n\r\n    return (\r\n        <div className={s.hw3}>\r\n            <input value={name}  placeholder={'Enter Name'} onChange={setNameCallback} className={`${inputClassError} ${s.inputName}` }/>\r\n            <button className={`${inputClassError} ${s.buttonAdd}`}  onClick={addUser}>Add</button>\r\n            <span className={s.totalUsers}> Number of users: {totalUsers}</span>\r\n            <div className={s.textError}>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n\r\n\r\n    return (\r\n        <Greeting users={users}\r\n                  addUserCallback={addUserCallback}/>\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let user={_id:v1(), name:name}\r\n        let newUser=[user,...users]\r\n        setUsers(newUser)\r\n    }\r\n\r\n    const style={\r\n        backgroundColor: \"#61dafb\"\r\n    }\r\n    return (\r\n        <div style={style} >\r\n            <hr/>\r\n           <h2>HomeTask 3 </h2>\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error === 'error' ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked)\n            console.log(e.currentTarget.checked)\n        }\n}\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            if(text.trim()) {\n                alert(text) // если нет ошибки показать текст\n            } else {\n                alert('ты шо пробелов наделал')\n            }\n\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n    console.log( `checked=${checked}`)\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, работает ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением необязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked} onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}