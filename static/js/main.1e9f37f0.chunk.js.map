{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","message","avatar","src","alt","textMessage","inTextMessage","name","text","time","messageData","HW1","Affair","styleClass","affair","_id","priority","button","onClick","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","console","log","deleteAffair","App","s","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1e9f37f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3Jc5l\",\"avatar\":\"Message_avatar__1LDJI\",\"name\":\"Message_name__2480J\",\"text\":\"Message_text__2-mpW\",\"textMessage\":\"Message_textMessage__1dxK0\",\"inTextMessage\":\"Message_inTextMessage__1Yq_5\",\"time\":\"Message_time__3MTiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__1LqH6\",\"name\":\"Affair_name__ANoSi\",\"priority\":\"Affair_priority__2m6HF\",\"button\":\"Affair_button__3ATzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__1Ck6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__DG1JW\"};","import React from 'react'\nimport style from './Message.module.css'\n\n\ntype propsMessage={\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n}\n\n\nfunction Message(props:propsMessage) {\n    return (\n        <div className={style.message}>\n<div className={style.avatar}>\n    <img src={props.avatar} alt={'Logo'}/>\n</div>\n            <div className={style.textMessage}>\n                <div className={style.inTextMessage}>\n                    <div className={style.name}>{props.name}</div>\n                    <div className={style.text}>{props.message}</div>\n                </div>\n                <div className={style.time}>{props.time}</div></div>\n\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <h2>HomeTask1</h2>\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport styleClass from './Affair.module.css'\n\nexport type AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number)=> void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        debugger\n        props.deleteAffairCallback(props.affair._id)\n    }\n\n    return (\n        <div className={styleClass.affair}>\n         <div key={props.affair._id} className={styleClass.name}>{props.affair.name}</div>\n        <div className={styleClass.priority}>{props.affair.priority}</div>\n            <button className={styleClass.button} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport styleClass from  './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter:(filter:FilterType)=>void\n    deleteAffairCallback: (_id: number)=> void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a) => (\n        <Affair // should work\n            key={a._id}\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n            <button className={styleClass.button} onClick={setAll}>All</button>\n            <button className={styleClass.button} onClick={setHigh}>High</button>\n            <button className={styleClass.button} onClick={setMiddle}>Middle</button>\n            <button className={styleClass.button} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high'|'low'|'middle'\nexport type AffairType ={\n    _id:number\n    name:string\n    priority:AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    return affairs.filter(f=>f.priority===filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { //\n    console.log(affairs.filter(f=>f._id!==_id))\n    return  affairs.filter(f=>f._id!==_id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            <h2>HomeTask2</h2>\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}